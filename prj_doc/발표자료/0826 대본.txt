1p
안녕하십니까 1조 팀장 강지원입니다.
프로젝트 발표 시작하겠습니다.

저희 조는
'취준생을 위한 성격유형별 경험 및 정보 공유 커뮤니티'
서비스를 개발하는 프로젝트를 진행하였습니다.

2p
발표는
프로젝트 개요,
프로젝트 내용,
서비스 시연,
향후 발전 방향 순으로 진행하겠습니다.

3p
주제 선정 배경에 대해서는
지난번 기획보고 때 설명드렸지만
다시 한번 간략하게 짚고 넘어가자면,
최근 3년 동안 코로나19가 장기화되면서
특히 청년층의 우울이 심화되었음을
건강보험심사평가원의 현황 분석 데이터를 통해
확인할 수 있었는데요,

4p
또한 코로나로 인해 발생한
청년층의 이례적인 고용충격의 영향이
어느 정도 일상회복이 이루어진 지금까지도
여전히 지속되고 있는 상황입니다.

5p
띠라서 이러한 고용충격이
청년층의 취업고민 심화로 이어지면서
이른바 '청년 실업 팬데믹' 현상이
청년층의 정신건강을 해치고 있음을 확인하였습니다.

따라서 저희는 청년들의 정신건강 증진을 위해
취업불안감 해소에 도움이 되는 웹사이트를 기획하였고,

6p
구체적인 취준생들의 불안감 해소 수단으로
심리테스트를 통한 유형별 커뮤니티 서비스를 고안했습니다.

심리테스트의 효과에 대해서는
지난 기획보고 때 말씀드렸기 때문에
시간관계상 넘어가겠습니다.

7p
앞서 말씀드렸듯 저희가 개발한 서비스는
취준생을 위한 성격 유형별 경험 및 정보 공유 커뮤니티
'베르데테르의 꿈틀'이며,

서비스는 크게
MBTI를 기반으로 자체 제작한
취준생 맞춤 성격유형 테스트와
성격유형별 게시판 커뮤니티로 나누어지며,

기획 단계에서 고안했던 추가 서비스는
추후 구현 예정입니다.

8p
저희는 이렇게 5명의 팀원으로 구성되어 있고,
각자 수행한 역할은 다음과 같습니다.

9p
본격적으로 프로젝트 내용을 보고하기에 앞서
저희가 사용한 개발환경을 말씀드리면,
window 운영체제 하에서
IDE는 sts 4버전을,
JDK는 11버전을,
DBMS로는 MySQL을,
쿼리툴로는 DBeaver를 사용하였습니다.

10p
또한 프론트엔드에서는 JQuery, 타임리프, 부트스트랩,
미디어쿼리, 플렉스박스, 아작스 등을 사용하엿고
백엔드에서는 스프링부트, 마이바티스, Lombok,
RestAPI, 스프링시큐리티, Jython 등을 사용하였습니다.

팀원 간의 협업을 위한 툴로는 Git을 활용하였습니다.

11p
다음은 시스템 아키텍처입니다.
크게 사용자, 웹, 관계형 DBMS, 머신러닝 모델로 구성되어있고,
이중 웹은 스프링 부트에서 MVC2 패턴으로 구현하였습니다.

웹 애플리케이션 서버로는 아파치 톰캣을,
관계형 DBMS로는 MySQL을 사용하였고
마이바티스를 통해 웹서버와 데이터베이스를
유기적으로 연동하였습니다.

머신러닝 자연어처리 모델로는 SVM을 선택하여
기존의 캐글 MBTI 데이터셋을 학습하고
사용자의 유형을 판단하도록 했는데,

이러한 모델링이 이루어지는 파이썬 파일을
자바 백엔드에서 실시간으로 실행하기 위해
저희는 Jython 방식을 사용하였습니다.

12p
저희 프로젝트에 사용된 데이터베이스를 살펴보면,
회원정보를 관리하는 member 테이블,
머신러닝 input값을 저장하는 ML 테이블,
모델의 output값을 저장하는 output 테이블,
각 유형의 정보를 저장하는 type 테이블,
게시글을 저장하는 post 테이블과
댓글을 저장하는 comment 테이블,
그리고 캐릭터 정보를 저장하는 character 테이블까지
총 7개의 테이블이 서로를 참조하고 있는 형태입니다.

13p
이러한 아키텍처와 데이터베이스를 통해
다음과 같은 서비스 흐름이 이루어지는데요,

먼저 일반 사용자의 경우
메인 페이지에서 회원가입 및 로그인을 실시한 후
성격유형 테스트를 진행하여 결과를 확인하고,
유형별 게시판에 글 및 댓글을 작성하고,
마이페이지, 캐릭터 보드 등등
다양한 페이지에 접근할 수 있습니다.

14p
관리자의 관점에서는 몇가지 기능이 더 추가됩니다.
게시판에 공지글을 작성하거나 글을 삭제하는 게시판 관리,
캐릭터를 등록, 수정, 삭제하는 캐릭터 관리,
회원 목록을 조회하고 탈퇴시키는 회원 관리를 할 수 있는데,
이중 강제로 회원들을 탈퇴시키는 기능은 추후 구현 예정입니다.

15p
여기서부터는 주요 기능에 대하여 설명드리겠습니다.
성격유형 테스트 화면은 다음과 같고
16개 문항에 대한 응답을 제출하면
컨트롤러에서 PythonInterpreter를 호출하여
실시간으로 파이썬 배치파일을 실행합니다.

파이썬 모델이 돌아가는 동안에는 엇싱크 방식을 활용하여
다음 페이지로 이동하게 되는데,
분석 중임을 알리는 문구와 함께 카운트다운이 시작되고,
카운트다운이 끝나면 분석 결과가 화면에 출력됩니다.

16p
다음은 회원가입 화면입니다.
아이디와 이메일의 경우 중복확인 기능을 거치도록 했고,
비밀번호는 PasswordEncoder를 이용하여 암호화하였습니다.

이메일 형식은 정규표현식을 이용하여 작성되는데,
회원가입을 완료하면 JavaMailSender를 통해
해당 이메일로 가입 환영 메일을 전송하도록 했습니다.

17p
로그인 화면에서는
Bcrypt 해시함수로 암호화하여 저장된 비밀번호를
입력받은 비밀번호와 비교하도록 하였고,
아이디 찾기 및 비밀번호 찾기도 정상적으로 구현하였습니다.

특히 비밀번호 찾기를 실시하면
랜덤으로 생성된 임시 비밀번호를 메일로 전송해주어
비밀번호가 쉽게 노출되지 않도록 했습니다.

18p
다음은 유형별 게시판 화면입니다.
글 작성은 로그인 후 자기 유형에 해당하는 게시판에서만 가능하나
관리자의 경우 모든 게시판에 글을 쓸 수 있도록 했습니다.

제목, 작성자, 내용 등의 정보를 입력하면
그에 해당하는 글이 검색 및 출력되도록 했고,
화면의 정보를 받아 페이징도 구현하였습니다.

19p
게시글 상세보기 화면에서
글 수정 및 삭제는 작성자 본인만 가능하지만,
관리자는 모든 글을 삭제할 수 있도록 허용하였습니다.

댓글은 RestsAPI 방식으로 url을 매핑하고
아작스를 통한 비동기 방식을 활용하였기 때문에
화면이 새로고침되지 않아도 실시간으로 화면에 출력됩니다.

댓글 또한 로그인 및 성격유형 테스트를 하지 않으면
작성할 수 없도록 구현하였습니다.

20p
글을 작성하는 페이지에서
게시글의 유형은 자동으로 매핑되어 출력되고,
제목과 내용을 입력하고 저장하면 글이 등록됩니다.

21p
마지막 기능은 캐릭터 보드 서비스입니다.
각 유형의 캐릭터들을 조회, 등록, 수정, 삭제할 수 있는데
이중 등록, 수정, 삭제는 관리자에게만 허용됩니다.

캐릭터 등록 시 MultipartFile 매개변수를 사용하여
사용자가 업로드한 사진 파일을 처리하게 되는데,
이때 파일의 이름은 고유 식별을 위해서
원래 이름 앞에 랜덤문자를 생성하여 붙여줍니다.

DB에는 파일의 이름과 경로가 저장되며,
화면에는 해당하는 경로에 있는 사진이 보여집니다.

22p
이번에는 직접 서비스를 시연해보도록 하겠습니다.

먼저 메인 페이지의 구성을 말씀드리면,
Welcome to VerDeTerr라는 문구를 통해
서비스의 시작을 알리고 있고
상단 내비게이션 바에는
성격유형 테스트, 게시판, 캐릭터, 회원가입, 로그인 등의
주요 기능들을 고정해두었습니다.
이중 회원가입 탭은 로그인 후 마이페이지 탭으로,
로그인 탭은 로그아웃 버튼으로 전환되도록 하였습니다.

스크롤을 내려보면 서비스에 대한 간략한 소개가 되어있고,
서비스의 기대효과에 대해서도 보여주고 있습니다.

그 아래에는 성격 유형 테스트에 대한 소개,
성격 유형별 게시판에 대한 소개가 있고,
메인 페이지 맨 아래에서 로그인을 진행하도록 하였습니다.
그 외에도 회원가입, 아이디 찾기, 비밀번호 찾기 페이지와 연결된버튼도 추가해두었습니다.

이제 제가 직접 회원가입을 해보겠습니다.
아이디를 입력하고 중복확인 버튼을 눌러
별도의 창에서 중복 확인을 실시합니다.

기존에 있는 아이디(지원0000)를 입력했을 경우
이미 사용 중인 아이디라고 알려주기 때문에,
이제 새로운 아이디(지원0212)를 입력하여
가입을 계속 진행하겠습니다.

비밀번호(000000)는 6글자 이상, 20글자 이하만
사용 가능하도록 되어있는데,
조건에 부합하는 비밀번호를 입력하면
바로 이렇게 사용 가능한 비밀번호라는 것을 알려주고
비밀번호 확인란에도 같은 비밀번호를 한번 더 입력하면
비밀번호와 일치한다는 것을 보여줍니다.
비밀번호 힌트(가족)와 이메일(donumm@naver.com)도
이어서 입력해보겠습니다.
제 이메일을 입력하고 중복확인을 해보니
사용 가능한 이메일임을 알려줍니다.

나이와 성별까지 모두 입력한 후 회원가입을 하면
환영한다는 메시지와 함께 자동으로 로그인이 되었습니다.

이제 성격유형 테스트를 해보겠습니다.
테스트하러가기 버튼을 누르면
이렇게 양자택일의 질문이 주어집니다.
16가지의 문항에 모두 응답한 후 결과를 확인해보겠습니다.

현재 분석 중이라는 문구와 함께
10초 카운트다운이 끝나면
이렇게 테스트 결과가 나옵니다.
저는 "귀찮을지라도 자신의 상황을 직시하고
묵묵히 책임을 다하는 징징이" 유형이라고 나오네요!

다시 테스트하기 버튼을 누르면
한번 더 테스트할 수 있지만 시간 관계상 생략하고
마이페이지에서 제 정보를 한번 확인해보겠습니다.

마이페이지에 들어가려면 본인확인을 거쳐야 하는데,
제 비밀번호를 입력하면 본인 확인이 됩니다.

마이페이지에서는 자신의 가입정보와 함께
이전의 테스트 내역을 확인할 수 있습니다.
내가쓴글보기, 비밀번호변경, 회원탈퇴 기능도 있지만
시간관계상 비밀번호 변경만 수행해보겠습니다.

비밀번호 변경 페이지에서는 현재 비밀번호(000000)와
변경할 비밀번호(111111)를 입력해야 합니다.
현재 비밀번호를 잘못 입력했을 경우에는 이렇게
그리고 현재 비밀번호와 변경할 비밀번호가 같은 경우에는 이렇게
해당하는 메시지를 알림창으로 보여주고,
제대로 입력되었을 경우에만 비밀번호 변경이 완료됩니다.

이제 게시판으로 이동하겠습니다.
저는 징징이 유형이기 때문에
다른 유형의 게시판에서는 글을 작성할 수 없습니다.
예를 들어 마이크 와조스키 게시판에서는
글쓰기 권한은 없고 기존 글 조회만 가능합니다.
물론, 자신의 글이 아니기 때문에
수정 및 삭제 권한도 없습니다.

단, 댓글을 등록하고 삭제하는 것은 가능합니다.
댓글 수정 또한 구현을 했지만,
팀원 간의 병합 과정에서 충돌이 발생하여
현재 수정 기능은 정상 작동하지 않습니다.

이번에는 저의 유형에 해당하는 게시판에 들어가보겠습니다.
이곳에서는 글의 작성, 수정, 삭제가 모두 가능하기 때문에
새로운 글을 먼저 작성해보겠습니다.
이렇게 제목과 내용을 입력하고 저장하면
새로운 글이 게시판에 등록되었고,
제가 작성한 글이기 때문에 수정과 삭제가 가능합니다.

내용을 수정하여 등록하면 이렇게 수정된 것을 볼 수 있고,
삭제 또한 바로 할 수 있습니다.
하지만 여전히 다른 사람의 글은 수정 및 삭제가 불가능합니다.

이번에는 캐릭터 탭을 클릭해보겠습니다.
이렇게 귀여운 캐릭터들의 목록이 나오는데,
일반 사용자는 각 캐릭터의 내용 조회만 가능합니다.

이제 일반 사용자는 로그아웃하고,
미리 관리자로 지정해준 아이디(Admin, 123123)로
다시 로그인해보겠습니다.

본인 확인을 거쳐 마이페이지로 이동하면
자신의 가입정보와 함께 회원 목록을 조회할 수 있습니다.

또한 관리자는 모든 게시판에서 글 작성이 가능합니다.
예를 들어 심바 유형의 관리자이지만
버즈 라이트이어 게시판에서도 글을 작성할 수 있습니다.
이때 공지글 여부를 체크하게 되면
이렇게 공지글이 작성되는 것도 확인할 수 있습니다.

이번에는 또다른 유형의 게시판에서
다른 사용자의 글에 접근해보겠습니다.
관리자는 다른 사용자의 글을 수정할 수는 없지만,
삭제 권한은 주어지도록 구현하였습니다.

마지막으로 캐릭터 목록으로 이동해보면
일반 사용자와는 달리 캐릭터를 등록할 수 있지만,
시간관계상 넘어가겠습니다.

기존의 캐릭터 정보를 수정, 삭제할 수도 있는데
예를 들어 뚱이의 사진을 다른 사진으로 수정해보겠습니다.
파일 선택을 누르고 원하는 이미지를 추가하면
다음과 같이 캐릭터 목록에 반영되는 것을 확인할 수 있습니다.

(메인 가서 로그아웃) 이렇게 시연을 마치고

23p
마지막으로 향후 발전 방향을 보고드리겠습니다.

서비스의 확장 면에서는
앞서 언급했듯이 각 팀원의 전공지식을 살려서
음성인식모델, 체질진단, 설문조사 등을 구현할 수 있으며,
유저들의 테스트 데이터를 수집하여
머신러닝 모델의 추가 훈련 및 성능 개선을 할 수 있습니다.

수익 창출의 측면에서는
헤로쿠나 오라클 클라우드를 통해 서비스를 배포할 예정이며
배포 후에는 구글 애널리틱스를 활용하여
사이트에 접속한 유저들의 로그를 분석할 수 있습니다.
이후 하반기 취업 시즌에 맞춰 적절한 방식으로
홍보 및 광고주 유치에 성공한다면
본 서비스로 수익을 창출할 수 있을 것이라 생각합니다.

추가적으로
테스트 결과에 대한 즉각적인 사용자의 평가 기능 구현,
병합 과정에서의 충돌로 인한 기능장애 해결 등등
보다 나은 서비스를 위한 유지보수도 진행할 예정입니다.

각종 문서나 자세한 내용은 부록을 참고하시면 되겠습니다.

감사합니다!